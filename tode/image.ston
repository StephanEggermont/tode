TDDirectoryNode{#name:'image',#contents:{'backupFile':TDTxtLeafNode{#name:'backupFile',#contents:Text{#string:'/opt/gemstone/product32/seaside/data/backups/filetree.dbf',#runs:RunArray{#runs:[57],#values:[[TextEmphasis{#emphasisCode:0,#setMode:true}]],#lastIndex:53,#lastRun:1,#lastOffset:52}}},'exportFile':TDTxtLeafNode{#name:'exportFile',#contents:Text{#string:'/opt/git/tode/tode/image.ston',#runs:RunArray{#runs:[29],#values:[[]],#lastIndex:29,#lastRun:1,#lastOffset:28}}},'bin':TDDirectoryNode{#name:'bin',#contents:{'backup':TDScriptLeafNode{#name:'backup',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) backup ]'},'diff':TDScriptLeafNode{#name:'diff',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) diff ]'},'export':TDScriptLeafNode{#name:'export',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) export ]'},'import':TDScriptLeafNode{#name:'import',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) import ]'},'commit':TDScriptLeafNode{#name:'commit',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) commit ]'},'postCommitForGitRepo':TDScriptLeafNode{#name:'postCommitForGitRepo',#contents:'\"This is source for a block.  \" 
 ^ [ :topez :objIn :tokens :windowId | 
  (TDDevProcessSupport
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) postCommitForGitRepo ]'}}},'STATUS':TDTxtLeafNode{#name:'STATUS',#contents:Text{#string:'BACKUP: 2013-06-15T20:46:29.66566610336304-07:00

No STATUS file for \'filetree\'

',#runs:RunArray{#runs:[8,73],#values:[[TextEmphasis{#emphasisCode:0,#setMode:true},TextEmphasis{#emphasisCode:1,#setMode:true}],[TextEmphasis{#emphasisCode:0,#setMode:true}]],#lastIndex:nil,#lastRun:nil,#lastOffset:nil}}},'rb':TDDirectoryNode{#name:'rb',#contents:{'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'RB\';
  list'}}},'filetree':TDDirectoryNode{#name:'filetree',#contents:{'tmpGitRepo':TDTxtLeafNode{#name:'tmpGitRepo',#contents:Text{#string:'/opt/git/tmp/filetree',#runs:RunArray{#runs:[21],#values:[[]],#lastIndex:12,#lastRun:1,#lastOffset:11}}},'intersect':TDScriptLeafNode{#name:'intersect',#contents:'[ :topez :objIn :tokens :windowId | 
| myNode defs1 defs2 |
\"intersect <definitions-1> <definitions-2>\"
myNode := topez lookup: (tokens at: 1).
defs1 := (myNode parent lookup: (tokens at: 2) with: topez) dotSelfObject.
defs2 := (myNode parent lookup: (tokens at: 3) with: topez) dotSelfObject.
\tdefs1 intersection: defs2 ]'},'gitRepo':TDTxtLeafNode{#name:'gitRepo',#contents:Text{#string:'/opt/git/gs/filetree',#runs:RunArray{#runs:[20],#values:[[]],#lastIndex:20,#lastRun:1,#lastOffset:19}}},'classList':TDObjectGatewayNode{#name:'classList',#contents:'| cls classes defs |
\"view definitionList ./browse\"
classes := Set new.
#(#\'MCFileTreeTodeTool\' #\'TDClassDefinition\' #\'TDDevProcessSupport\')
  do: [ :className | 
    cls := Smalltalk at: className.
    classes addAll: (TDClassDefinition fullHierarchyOf: cls) ].
defs := classes collect: [ :each | TDClassDefinition className: each name ].
TDClassDefinition classHierarchyOrder: defs'},'config':TDTxtLeafNode{#name:'config',#contents:Text{#string:'filetree:///opt/git/config/filetree/repository',#runs:RunArray{#runs:[46],#values:[[TextColor{#color:Color{#rgb:536871424}}]],#lastIndex:1,#lastRun:1,#lastOffset:0}}},'commitMessage':TDTxtLeafNode{#name:'commitMessage',#contents:Text{#string:'testing ... testing ... 1 .. 2 .. 3',#runs:RunArray{#runs:[35],#values:[[]],#lastIndex:35,#lastRun:1,#lastOffset:34}}},'versionString':TDTxtLeafNode{#name:'versionString',#contents:Text{#string:'1.0.2',#runs:RunArray{#runs:[5],#values:[[]],#lastIndex:5,#lastRun:1,#lastOffset:4}}},'deploy':TDScriptLeafNode{#name:'deploy',#contents:'[ :topez :objIn :tokens :windowId | 
  (MCFileTreeTodeTool
    topez: topez
    objIn: objIn
    tokens: tokens
    windowId: windowId) deploy ]'},'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'FileTree\';
  list'},'filter':TDScriptLeafNode{#name:'filter',#contents:'[ :topez :objIn :tokens :windowId | 
| myNode classDefs sourceDefs classes |
\"filter <definitions-path> <classDefinitions-name>\"
myNode := topez lookup: (tokens at: 1).
sourceDefs := (topez lookup: (tokens at: 2)) dotSelfObject.
classDefs := (myNode parent lookup: (tokens at: 3) with: topez) dotSelfObject.
classes := classDefs collect: [ :each | each theClass ].
sourceDefs select: [ :def | classes includes: def theClass ] ]'},'ss3':TDObjectGatewayNode{#name:'ss3',#contents:'(TDMonticelloRepository fromDescription: \'http://ss3.gemstone.com/ss/FileTree\')
  repository'},'target':TDTxtLeafNode{#name:'target',#contents:Text{#string:'http://ss3.gemstone.com/ss/FileTree',#runs:RunArray{#runs:[35],#values:[[TextColor{#color:Color{#rgb:536871424}}]],#lastIndex:1,#lastRun:1,#lastOffset:0}}}}},'active':TDObjectGatewayNode{#name:'active',#contents:'#(\'filetree\')'},'indexing':TDDirectoryNode{#name:'indexing',#contents:{'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'Indexing\';
  list'}}},'tmp':TDDirectoryNode{#name:'tmp',#contents:{}},'glass':TDDirectoryNode{#name:'glass',#contents:{'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  configuration: \'GLASS\';
  list'}}},'metacello':TDDirectoryNode{#name:'metacello',#contents:{'gemsource':TDObjectGatewayNode{#name:'gemsource',#contents:'(TDMonticelloRepository
  fromDescription: \'http://seaside.gemstone.com/ss/metacello\') repository'},'repo':TDObjectGatewayNode{#name:'repo',#contents:'(TDMonticelloRepository
  fromDescription: \'filetree:///opt/git/metacello-work/repository\') repository'},'STATUS':TDTxtLeafNode{#name:'STATUS',#contents:'project Metacello
version baseline
loads anArray( \'ALL\')
repo filetree:///opt/git/metacello-work/repository
directory /opt/git/metacello-work
commit 2af769beb62cf5cbf9f7be8b1a2393278dc6242b
Author: Dale Henrichs <dhenrich@vmware.com>
Date:   Wed May 15 21:40:00 2013 -0700

    working on toobox support for BaselineOf'},'sthub':TDObjectGatewayNode{#name:'sthub',#contents:'(TDMonticelloRepository
  fromDescription: \'http://smalltalkhub.com/mc/dkh/metacello/main\') repository'},'config-repo':TDObjectGatewayNode{#name:'config-repo',#contents:'(TDMonticelloRepository
  fromDescription: \'filetree:///opt/git/config/metacello-work\') repository'},'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'Metacello\';
  list'}}},'ston':TDDirectoryNode{#name:'ston',#contents:{'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'Ston\';
  list'}}},'tode':TDDirectoryNode{#name:'tode',#contents:{'STATUS':TDTxtLeafNode{#name:'STATUS',#contents:'commit 9e37cba228955a7fe4508dcddf9e245be556459e
Author: Dale Henrichs <dhenrich@vmware.com>
Date:   Sat Jun 8 16:42:47 2013 -0700

    improve db commands api for programmaticly setting breakpoints
'},'repo':TDObjectGatewayNode{#name:'repo',#contents:'(TDMonticelloRepository fromDescription: \'filetree:///opt/git/tode/repository\')
  repository'},'project':TDObjectGatewayNode{#name:'project',#contents:'Metacello image
  baseline: \'Tode\';
  list'},'gitRepo':TDTxtLeafNode{#name:'gitRepo',#contents:Text{#string:'/opt/git/tode',#runs:RunArray{#runs:[13],#values:[[TextColor{#color:Color{#rgb:536871424}}]],#lastIndex:1,#lastRun:1,#lastOffset:0}}}}},'projects':TDObjectGatewayNode{#name:'projects',#contents:'#(\'filetree\' \'glass\' \'indexing\' \'metacello\' \'rb\' \'ston\' \'tode\')'},'commitMessage':TDTxtLeafNode{#name:'commitMessage',#contents:Text{#string:'improve db commands api for programmaticly setting breakpoints',#runs:RunArray{#runs:[62],#values:[[]],#lastIndex:62,#lastRun:1,#lastOffset:61}}}}}