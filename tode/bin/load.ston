TDScriptLeafNode {	#name : 'load',	#contents : '[ :topez :objIn :tokens :windowId | \n| baselineName loaded useNew useImage |\nbaselineName := tokens at: 2.\nuseNew := #().\nuseImage := #(\'RB\' \'Tode\' \'FileTree\' \'Indexing\' \'Metacello\').\nTranscript\n  cr;\n  show: \'Load: \' , DateAndTime now printString.\nMetacello new\n  baseline: baselineName;\n  repository: (tokens at: 3);\n  silently;\n  get.\nloaded := Metacello new\n  baseline: baselineName;\n  repository: (tokens at: 3);\n  silently;\n  onConflict: [ :ex | \n        | projectRegistration projectName |\n        projectRegistration := ex existingProjectRegistration.\n        projectName := projectRegistration projectName.\n        (useNew includes: projectName)\n          ifTrue: [ \n            Transcript\n              cr;\n              show: \'Load using: \' , ex newProjectRegistration printString;\n              cr;\n              tab;\n              show: \'instead of: \' , ex existingProjectRegistration printString.\n            ex allow ]\n          ifFalse: [ \n            (useImage includes: projectName)\n              ifTrue: [ \n                Transcript\n                  cr;\n                  show:\n                      \'Load using: \' , ex existingProjectRegistration printString;\n                  cr;\n                  tab;\n                  show: \'instead of: \' , ex newProjectRegistration printString.\n                ex disallow ]\n              ifFalse: [ ex pass ] ] ];\n  load: \'ALL\'.\t\"\rclear packagelists\"\nTDConfigurationList reset.\nTDPackageList reset.\ntopez resetAllGlobalNames.\nloaded printString asText ]'}