TDScriptLeafNode {	#name : 'info',	#contents : '[ :topez :objIn :tokens :windowId | 
| stream baselineName topezPath spec gitReoSpec parentNode |
\"info Tode /home/tode\"
baselineName := tokens at: 2.
topezPath := tokens at: 3.
parentNode := topez ensureChildrenExistIn: topezPath.
stream := WriteStream on: String new.
stream nextPutAll: \'project \' , baselineName.
spec := Metacello image
  baseline: baselineName;
  list.
stream
  lf;
  nextPutAll: \'version \' , spec versionString;
  lf;
  nextPutAll: \'loads \' , spec loads printString.
spec repositories
  do: [ :repoSpec | 
    stream
      lf;
      nextPutAll: \'repo \' , repoSpec description.
    repoSpec type = \'filetree\'
      ifTrue: [ 
        | command repository commit info commandBase gitDir |
        repository := repoSpec createRepository.
        gitDir := repository directory containingDirectory pathString.
        stream
          lf;
          nextPutAll: \'directory \' , gitDir.
        commandBase := \'git --git-dir \' , gitDir , \'/.git \'.
        command := commandBase , \' rev-parse HEAD\'.
        commit := (System performOnServer: command) trimBoth.
        command := commandBase , \' cat-file -p \' , commit.
        info := (System performOnServer: command) trimBoth.
        stream
          lf;
          nextPutAll: \'commit \' , commit;
          lf;
          nextPutAll: info ] ].
parentNode
  addChildNode:
    (TDTxtLeafNode new
      name: \'INFO\';
      contents: stream contents;
      yourself) ]'}