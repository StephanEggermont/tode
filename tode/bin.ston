TDDirectoryNode{#name:'bin',#contents:{'load':TDScriptLeafNode{#name:'load',#contents:'[ :topez :objIn :tokens :windowId | \n| projectName loads repo description gitTool status statusNode|\n\"/home/bin/load Tode `GemStone Dev`\"\nprojectName := tokens at: 2.\nloads := \'default\'.\ntokens size > 2\n  ifTrue: [ loads := tokens copyFrom: 3 to: tokens size ].\nrepo := (topez lookup: \'repo\') dotSelfObject.\ndescription := repo description.\nMetacello new\n  baseline: projectName;\n  repository: description;\n  get.\nMetacello new\n  baseline: projectName;\n  repository: description;\n  onConflict: [ :ex | ex allow ];\n  onWarning: [ :ex | \n        Transcript\n          cr;\n          show: \'WARNING: \' , ex description.\n        ex resume ];\n  load: loads.\nTDStandardTool initializeTools.\ngitTool := topez toolInstanceFor: \'git\'.\nstatus := gitTool\n  performGitCommand: \'log\'\n  in: repo directory containingDirectory\n  with: \'-1\'.\rstatusNode := topez lookup: \'status\' ifAbsent: [topez currentNode addChildNode: (TDTxtLeafNode new\r        name: \'status\';\r        yourself)].\rstatusNode contents: status.\rstatus ]'},'mapRepos':TDScriptLeafNode{#name:'mapRepos',#contents:'[ :topez :objIn :tokens :windowId | \n| spec version workingCopies mcTool newRepo |\n\"/home/bin/mapRepos Tode filetree:///opt/git/tode/repository\r /home/bin/mapRepos Tode @repos\r\r  ensure that all packages in project have the given repo in repository group.\"\nmcTool := topez toolInstanceFor: \'mc\'.\nnewRepo := mcTool resolveRepositoryReference: (tokens at: 3).\nspec := Metacello image\n  baseline: (tokens at: 2);\n  list.\nversion := spec version.\nworkingCopies := version packages collect: [ :each | each workingCopy ].\nworkingCopies := workingCopies select: [ :each | each notNil ].\nworkingCopies\n  do: [ :wc | \n    | rg |\n    rg := wc repositoryGroup.\n    rg repositories do: [ :repo | rg removeRepository: repo ].\n    rg addRepository: newRepo ] ]'},'commit':TDScriptLeafNode{#name:'commit',#contents:'[ :topez :objIn :tokens :windowId | \n| projectName commitMessage mmTool commitedVersions |\n\"/home/bin/commit Tode `commit message`\r/home/bin/commit Tode @commitMessage\"\nprojectName := tokens at: 2.\ncommitMessage := tokens at: 3.\nmmTool := topez toolInstanceFor: \'mm\'.\n(commitMessage beginsWith: \'@\')\n  ifTrue: [ commitMessage := (mmTool resolveAtPathReference: commitMessage) asString ].\nTranscript\n  cr;\n  show: \'======= committing \' , projectName printString , \'=======\'.\ncommitedVersions := mmTool mmCommit: projectName commitMessage: commitMessage.\ncommitedVersions isEmpty\n  ifTrue: [ \'No dirty packages to commit\' ]\n  ifFalse: [ \n    | repo status statusNode gitRepoDir gitTool commitMessageFileName |\n    repo := (topez lookup: \'repo\') dotSelfObject.\n    gitRepoDir := repo directory containingDirectory.\n    gitTool := topez toolInstanceFor: \'git\'.\n    commitMessageFileName := gitTool createTmpFileWith: commitMessage.\n    gitTool\n      performGitCommand: \'add\' in: gitRepoDir with: \'.\';\n      performGitCommand: \'status\' in: gitRepoDir with: \'\';\n      performGitCommand: \'commit\'\n        in: gitRepoDir\n        with: \'-a --file=\' , commitMessageFileName;\n      performGitCommand: \'status\' in: gitRepoDir with: \'\';\n      performGitCommand: \'log\' in: gitRepoDir with: \'-1\'.\n    status := gitTool\n      performGitCommand: \'log\'\n      in: repo directory containingDirectory\n      with: \'-1\'.\n    Transcript\n      cr;\n      show: \'==============\'.\n    statusNode := topez\n      lookup: \'status\'\n      ifAbsent: [ \n        topez currentNode\n          addChildNode:\n            (TDTxtLeafNode new\n              name: \'status\';\n              yourself) ].\n    statusNode contents: status.\n    status ] ]'},'create':TDScriptLeafNode{#name:'create',#contents:'[ :topez :objIn :tokens :windowId | \n| directoryName projectName repositoryDescription directoryNode status |\n\"/home/bin/create tode Tode filetree:///opt/git/tode/repository\"\ndirectoryName := tokens at: 2.\nprojectName := tokens at: 3.\nrepositoryDescription := tokens at: 4.\nstatus := \'edit ./load if you don\'\'t want to use default and you are good to go\'.\ndirectoryNode := topez\n  lookup: directoryName\n  ifAbsent: [ \n    topez currentNode\n      addChildNode:\n        (TDDirectoryNode new\n          name: directoryName;\n          yourself) ].\ndirectoryNode\n  addChildNode:\n      (TDTopezLeafNode new\n          name: \'browse\';\n          contents: \'browse project \' , projectName;\n          yourself);\n  addChildNode:\n      (TDTopezLeafNode new\n          name: \'commit\';\n          contents: \'/home/bin/commit \' , projectName , \' @commitMessage\';\n          yourself);\n  addChildNode:\n      (TDTxtLeafNode new\n          name: \'commitMessage\';\n          contents: \'\';\n          yourself);\n  addChildNode:\n      (TDTopezLeafNode new\n          name: \'diff\';\n          contents: \'mm diff \' , projectName;\n          yourself);\n  addChildNode:\n      (TDObjectGatewayNode new\n          name: \'gitRepo\';\n          contents: \'| repo |\rrepo := (self topez lookup: \'\'repo\'\') dotSelfObject.\rrepo directory containingDirectory\';\n          yourself);\n  addChildNode:\n      (TDTopezLeafNode new\n          name: \'load\';\n          contents: \'/home/bin/load \' , projectName , \' default\';\n          yourself);\n  addChildNode:\n      (TDObjectGatewayNode new\n          name: \'repo\';\n          contents:\n              \'(TDMonticelloRepository fromDescription: \' , repositoryDescription printString\n                  , \') repository\';\n          yourself);\n  addChildNode:\n      (TDTxtLeafNode new\n          name: \'status\';\n          contents: status;\n          yourself);\n  yourself.\nstatus ]'},'primeRegistry':TDSmalltalkLeafNode{#name:'primeRegistry',#contents:'MetacelloProjectRegistration resetRegistry.\nMetacello new\n  baseline: \'FileTree\';\n  repository: \'filetree:///opt/git/gs/filetree/repository\';\n  lock.\nMetacello new\n  baseline: \'Metacello\';\n  repository: \'filetree:///opt/git/metacello-work/repository\';\n  lock.\nMetacelloProjectRegistration primeRegistryFromImage'},'halt':TDSmalltalkLeafNode{#name:'halt',#contents:'\"opportunity to use debugger\"\n| block |\nblock := [:arg | arg halt].\nblock value: 100'}}}