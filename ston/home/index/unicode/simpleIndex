TDScriptLeafNode{#name:'simpleIndex',#contents:'[ :topez :objIn :tokens :windowId | 
| tree population populationIndexSpec query halt create result collator |
\"simple enumerated index\"
create := halt := false.
tokens size > 1
  ifTrue: [ 
    halt := (tokens at: 2) = \'halt\'.
    create := (tokens at: 2) = \'create\' ].
tree := (topez lookup: \'/home/index/family\') dotSelfObject.
population := tree population.
collator := IcuCollator forLocaleNamed: \'en_GB\'.
populationIndexSpec := GsIndexSpec new
  unicodeIndex: \'each.unicodeString\' collator: collator;
  yourself.
IndexManager current removeAllIncompleteIndexesOn: population.
[ 
create
  ifTrue: [ populationIndexSpec createIndexesOn: population ].
result := halt
  ifTrue: [ 
    population halt.
    population ]
  ifFalse: [ 
    | expected options unicodeString |
    options := GsQuery defaultQueryOptions + GsQueryOptions cacheQueryResult.
    unicodeString := \'\'.
    expected := population
      select: [ :each | each unicodeString = unicodeString ].
    query := (GsQuery fromString: \'each.unicodeString = string\' options: options)
      bind: \'string\' to: unicodeString;
      on: population collator: collator;
      yourself.
    expected size = query size
      ifFalse: [ nil error: \'size mismatch\' ].
    expected
      do: [ :each | 
        (query includes: each)
          ifFalse: [ nil error: \'contents mismatch\' ] ].
    query queryResult ] ]
  ensure: [ IndexManager current removeAllIncompleteIndexesOn: population ].
true
  ifTrue: [ populationIndexSpec removeIndexesFrom: population ].
result ]'}