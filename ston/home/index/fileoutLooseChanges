TDScriptLeafNode{#name:'fileoutLooseChanges',#contents:'[ :topez :objIn :tokens :windowId | 
| gsTool path classToFilenameMap externalMethodMap current packages package packagePrefixes |
gsTool := topez toolInstanceFor: \'gs\'.
path := \'/export/foos2/users/dhenrich/3.0/k_gss64bit/changes\'.
classToFilenameMap := Dictionary new
  at: #\'AbstractIndexSpecification\' put: #(\'abstractindexspec.gs\');
  at: #\'Array\' put: #(\'array2.gs\');
  at: #\'CollectionBasedPathEvaluator\' put: #(\'idxquerymethods.gs\');
  at: #\'CollectionBasedPathTerm\' put: #(\'collbasedpathterm.gs\');
  at: #\'DependencyList\' put: #(\'dependencylist.gs\');
  at: #\'EqualityIndexSpecification\' put: #(\'equalityindexspec.gs\');
  at: #\'EnumeratedPathEvaluator\' put: #(\'idxquerymethods.gs\');
  at: #\'EnumeratedPathTerm\' put: #(\'enumeratedpathterm.gs\');
  at: #\'Gs32DisjunctiveClauseOptimizer\' put: #(\'idxquerymethods.gs\');
  at: #\'GsAbstractQueryPredicate\' put: #(\'idxquerymethods.gs\');
  at: #\'GsAbstractReferenceAssociation\' put: #(\'idxquerymethods.gs\');
  at: #\'GsOptions\' put: #(\'idxquerymethods.gs\');
  at: #\'GsIndexOptions\' put: #(\'idxquerymethods.gs\');
  at: #\'GsIndexSpec\' put: #(\'idxquerymethods.gs\');
  at: #\'GsPathPathPredicate\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQuery\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryFormula\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryGrammar\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryLiteral\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryOptions\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryParser\' put: #(\'idxquerymethods.gs\');
  at: #\'GsQueryPredicate\' put: #(\'idxquerymethods.gs\');
  at: #\'IdentityIndex\' put: #(\'identityindex.gs\');
  at: #\'IdentityIndexSpecification\' put: #(\'identityindexspec.gs\');
  at: #\'IndexedQueryEvaluator\' put: #(\'indexquery.gs\');
  at: #\'IndexList\' put: #(\'indexlist.gs\');
  at: #\'IndexManager\' put: #(\'IndexManager.gs\');
  at: #\'PathTerm\' put: #(\'pathterm.gs\');
  at: #\'SetValuedPathTerm\' put: #(\'setpathterm.gs\');
  at: #\'UnicodeIndexSpecification\' put: #(\'idxquerymethods.gs\');
  at: #\'UnorderedCollection\' put: #(\'unorderedcoll3.gs\');
  yourself.
externalMethodMap := Dictionary new.
current := GsPackagePolicy current.
packages := {}.
current packages_Do: [ :pkg | packages add: pkg ].
package := packages detect: [ :pkg | pkg symbolDict name == #\'UserGlobals\' ].
packagePrefixes := MCWorkingCopy allManagers
  collect: [ :wc | \'*\' , wc packageName asLowercase ].
package
  behaviorAndMethodDictDo: [ :beh :methodDict | 
    methodDict keys
      do: [ :selector | 
        | cat meth set |
        (beh == Behavior and: [ selector == #\'_compileMethod:category:using:\' ])
          not
          ifTrue: [ 
            meth := MethodReference class: beh selector: selector asSymbol.
            cat := (beh categoryOfSelector: selector) asString asLowercase.
            (cat beginsWith: \'*\')
              ifTrue: [ 
                (packagePrefixes detect: [ :prefix | cat beginsWith: prefix ] ifNone: [  ])
                  ifNil: [ 
                    set := externalMethodMap
                      at: meth actualClass theNonMetaClass name
                      ifAbsent: [ externalMethodMap at: meth actualClass name put: Set new ].
                    set add: meth ] ]
              ifFalse: [ 
                set := externalMethodMap
                  at: meth actualClass theNonMetaClass name
                  ifAbsent: [ externalMethodMap at: meth actualClass name put: Set new ].
                set add: meth ] ] ] ].
gsTool
  gsfileout: path
  externalMethodMap: externalMethodMap
  classToFilenameMap: classToFilenameMap
  defaultHeader:
    \'!=========================================================================
! Copyright (C) GemTalk Systems, LLC. 2013.  All Rights Reserved.
!=========================================================================

\'
      withGemstoneLineEndings ]'}